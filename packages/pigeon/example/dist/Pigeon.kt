// Autogenerated from Pigeon (v9.1.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

@file:OptIn(ExperimentalObjCName::class)
package dev.flutter.pigeon
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName


enum class DeviceType(val raw: Int) {
  /** 未知 */
  UNKNOWN(1),
  /** iPhone */
  IPHONE(200),
  /** iPad */
  IPAD(201),
  /** iPod */
  IPOD(202),
  /** 模拟器 */
  SIMULATOR(203);

  companion object {
    @ObjCName("of") 
    fun ofRaw(raw: Int): DeviceType? {
      return values().firstOrNull { it.raw == raw }
    }
  }
}

/**
 * Hello world!
 *
 * Generated class from Pigeon that represents data sent in messages.
 */
class Hello (
  /** 名字 */
  var name: String? = null,
  var deviceType: DeviceType,
  var age: Long
) {
  companion object {
  }
}

/** Generated class from Pigeon that represents data sent in messages. */
class Hi (
  /** 名字 */
  var name: String,
  var deviceType: DeviceType,
  var age: Long
) {
  companion object {
  }
}

/** Generated class from Pigeon that represents data sent in messages. */
class Hb (

) {
  companion object {
  }
}
/**
 * host 平台提供的接口
 *
 * Generated interface from Pigeon that represents a handler of messages from Flutter.
 */
interface HelloHostApi {
  fun sayHi(hi: Hi, hb: Hb)
  /** say hello to host api; */
  @ObjCName("say")
  fun sayHelloToHostApi(hello: Hello, deviceType: DeviceType)
  /** 异步做工 */
  fun doWorkInSeconds(seconds: Long, callback: (CommonResult) -> Unit)
  /** 异步做工 */
  fun hasSalary(has: Boolean, callback: (CommonResult) -> Unit)

  companion object {

  }

}
