// Autogenerated from Pigeon (v9.1.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>


  #ifdef __ACError__

    /**
     * Error object representing an unsuccessful outcome of invoking a method
     * on a `FlutterMethodChannel`, or an error event on a `FlutterEventChannel`.
     */
    @interface ACError : NSObject
    /**
     * Creates a `ACError` with the specified error code, message, and details.
     *
     * @param code An error code string for programmatic use.
     * @param message A human-readable error message.
     * @param details Custom error details.
     */
    + (instancetype)errorWithCode:(NSString*)code
                          message:(NSString* _Nullable)message
                          details:(id _Nullable)details;
    /**
     The error code.
     */
    @property(readonly, nonatomic) NSString* code;
    
    /**
     The error message.
     */
    @property(readonly, nonatomic, nullable) NSString* message;
    
    /**
     The error details.
     */
    @property(readonly, nonatomic, nullable) id details;
    @end
    
    
        #endif
  
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class Hello;

/// Hello world!
@interface Hello : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name;
/// 名字
@property(nonatomic, copy) NSString * name;
@end

#ifdef __FLUTTER__
/// The codec used by HelloHostApi.
NSObject<FlutterMessageCodec> *HelloHostApiGetCodec(void);

#endif
/// host 平台提供的接口
@protocol HelloHostApi
/// say hello to host api;
- (void)sayHelloToHostApi:(Hello *)hello error:(FlutterError *_Nullable *_Nonnull)error;
/// 异步做工
- (void)doWork:(NSNumber *)duration completion:(void (^)(FlutterError *_Nullable))completion;
@end

#ifdef __FLUTTER__
extern void HelloHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<HelloHostApi> *_Nullable api);

#endif
#ifdef __ACError__
/// host 平台提供的接口
@protocol HelloHostApiI
/// say hello to host api;
- (void)sayHelloToHostApi:(Hello *)hello error:(ACError *_Nullable *_Nonnull)error;
/// 异步做工
- (void)doWork:(NSNumber *)duration completion:(void (^)(ACError *_Nullable))completion;
@end

#endif
#ifdef __FLUTTER__
/// The codec used by HelloFlutterApi.
NSObject<FlutterMessageCodec> *HelloFlutterApiGetCodec(void);

/// flutter 平台提供的接口
@interface HelloFlutterApi : NSObjectGetCodec
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
/// say hello to flutter api;
/// - hello 参数
- (void)sayHelloToFlutterApi:(Hello *)hello completion:(void (^)(FlutterError *_Nullable))completion;
@end

#endif
NS_ASSUME_NONNULL_END
