// Autogenerated from Pigeon (v9.1.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, DeviceType) {
  /// 未知
  DeviceTypeUnknown = 1,
  /// iPhone
  DeviceTypeIPhone = 200,
  /// iPad
  DeviceTypeIPad = 201,
  /// iPod
  DeviceTypeIPod = 202,
  /// 模拟器
  DeviceTypeSimulator = 203,
};

@class Hello;

/// Hello world!
@interface Hello : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name
    deviceType:(DeviceType)deviceType;
/// 名字
@property(nonatomic, copy) NSString * name;
@property(nonatomic, assign) DeviceType deviceType;
@end

#ifdef __FLUTTER__
/// The codec used by HelloHostApi.
NSObject<FlutterMessageCodec> *HelloHostApiGetCodec(void);

#endif
/// host 平台提供的接口
@protocol HelloHostApi
/// say hello to host api;
- (void)sayHelloToHostApi:(Hello *)hello deviceTyoe:(DeviceType)deviceType error:(FlutterError *_Nullable *_Nonnull)error;
/// 异步做工
- (void)doWork:(NSNumber *)duration completion:(void (^)(FlutterError *_Nullable))completion;
@end

#ifdef __FLUTTER__
extern void HelloHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<HelloHostApi> *_Nullable api);

#endif
/// The codec used by HelloFlutterApi.
NSObject<FlutterMessageCodec> *HelloFlutterApiGetCodec(void);

/// flutter 平台提供的接口
@interface HelloFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
/// say hello to flutter api;
/// - hello 参数
- (void)sayHelloToFlutterApi:(Hello *)hello completion:(void (^)(FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
